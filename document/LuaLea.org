* 单文件编译
  gcc name.c -fPIC -shared // 运行会出现core dump
* 在Linux的工程中使用lua
** 具体使用方法如下
   1. 下载最新的lua源码
   2. 在自己的工程中添加一个依赖库的目录，比如deps
   3. 将lua的源码解压到deps目录下
   4. 进入lua的src目录下，执行make a，以此生成静态库文件
   5. 编译自己的工程， 以一个简单的测试文件为例，使用如下的编译命令
      gcc -o main -Ideps/lua/src deps/lua/liblua.a -lm main.c #用到了数学库
   6. 编译完之后，就可以直接执行main文件了
* Lua源码阅读
  在reddit上LuaJIT的作者推荐了一个Lua源码的阅读顺序
  http://www.reddit.com/comments/63hth/ask_reddit_which_oss_codebases_out_there_are_so/c02pxbp
** 代码风格
   lua的内部模块暴露出来的API以luaX_xxx风格命名，即lua后跟
   一个大写字母表示内部模块名，而后由下划线加若干小写字母描述
   方法名。

   供外部程序使用的API则使用lua_xxx命名风格 。
** lua 的特性
   不同的lua虚拟机之间的工作是线程安全的，因为一切和虚拟机相关的内存操作都被关联
   到虚拟机对象中，而没有利用任何其他共享变量。

   lua的虚拟机核心部分没有任何的系统调用，正确的使用lua，不会对系统造成任何干扰，
   lua让用户自行定义内存管理器。
   
